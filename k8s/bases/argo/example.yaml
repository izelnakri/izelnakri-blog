apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: default-workflow
  namespace: argo
  generateName: default-workflow
spec:
  entrypoint: ci
  serviceAccountName: argo
  onExit: on-exit
  arguments:
    parameters:
    - name: branch
      value: master
    - name: sender
      value: admin
    - name: project
      value: placeholder
    - name: commitHash
      value: 0000000000000000000000000000000000000000
    - name: event
      value: something
  templates:
  - name: build-frontend-branch-image
    container:
      image: docker:stable-git
      command: [sh, -c]
      args:
        - git clone --single-branch --branch {{workflow.parameters.branch}} https://git.izelnakri.com/izelnakri/website &&
          cd website && cd frontend &&
          docker build . -t core.harbor.izelnakri.com/library/izelnakri/website:{{workflow.parameters.branch}}
      env:
      - name: DOCKER_HOST               # the docker daemon can be access on the standard port on localhost
        value: 127.0.0.1
    sidecars:
    - name: dind
      image: docker:17.10-dind          # Docker already provides an image for running a Docker daemon
      securityContext:
        privileged: true                # the Docker daemon can only run in a privileged container
      # mirrorVolumeMounts will mount the same volumes specified in the main container
      # to the sidecar (including artifacts), at the same mountPaths. This enables
      # dind daemon to (partially) see the same filesystem as the main container in
      # order to use features such as docker volume binding.
      mirrorVolumeMounts: true
  # - name: test-frontend
  #   container:
  #     image: inakri/base-slim
  #     command: [sh, -c]
  #     args: [
  #       "git clone --single-branch --branch {{workflow.parameters.branch}} https://git.izelnakri.com/izelnakri/website",
  #       "&& cd website && cd frontend",
  #       "&& npm install",
  #       "&& node_modules/.bin/mber test"
  #     ]
  # - name: test-backend
  #   container:
  #     image: inakri/base-slim
  #     command: [sh, -c]
  #     args: [
  #       "git clone --single-branch --branch {{workflow.parameters.branch}} https://git.izelnakri.com/izelnakri/website",
  #       "&& cd website && cd backend",
  #       "&& echo 'y' | mix local.hex --if-missing && echo 'y' | mix local.rebar --if-missing",
  #       "&& mix deps.get && mix deps.compile && mix compile",
  #       "&& mix test"
  #     ]
    # needs db container
  - name: ci
    dag:
      tasks:
        - name: build-frontend-branch-image
          template: build-frontend-branch-image
      # - name: test-backend
      #     image: docker/whalesay:latest
      # - name: tag-and-push-backend
      #   container:
      #     image: docker/whalesay:latest
      # - name: tag-and-push-frontend
      #   container:
      #     image: docker/whalesay:latest
  - name: on-exit
    container:
      image: appropriate/curl
      command: [sh, -c]
      args: ["curl --header 'Content-Type: application/json' \
  --request POST \
  --data '{\"workflowName\":\"{{workflow.name}}\",\"workflowStatus\":\"{{workflow.status}}\"}' \
  http://a0dd6e3ab11a.ngrok.io/submit-workflow-result"]

  # curl --header 'Content-Type: application/json' \
  # --request POST \
  # --data '{"username":"xyz","password":"xyz"}' \
  # http://b3d3905423c2.ngrok.io/submit-workflow-result

  # on master do complex deployment logic
  # - name: whalesay
  #   container:
  #     image: docker/whalesay:latest
  #     command: [cowsay]
  #     args: ["hello world"]
