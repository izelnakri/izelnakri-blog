---
# Source: stolon/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: izel-stolon
  labels:
    app: stolon
    chart: stolon-1.6.1
    release: izel
    heritage: Helm
---
# Source: stolon/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: izel-stolon
  labels:
    app: stolon
    chart: stolon-1.6.1
    release: izel
    heritage: Helm
type: Opaque
data:

  pg_su_password: "c29tZXRoaW5n"


  pg_repl_password: "cmVwbGljYXRpb25zb21ldGhpbmc="
---
# Source: stolon/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: izel-stolon
  labels:
    app: stolon
    chart: stolon-1.6.1
    release: izel
    heritage: Helm
data:
---
# Source: stolon/templates/hooks/init-db-job.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: izel-stolon-init-scripts
data:
---
# Source: stolon/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: izel-stolon
  labels:
    app: stolon
    chart: stolon-1.6.1
    release: izel
    heritage: Helm
rules:
- apiGroups:
    - ""
  resources:
    - pods
    - endpoints
    - configmaps
    - events
  verbs:
    - "*"
---
# Source: stolon/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: izel-stolon
  labels:
    app: stolon
    chart: stolon-1.6.1
    release: izel
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: izel-stolon
subjects:
- kind: ServiceAccount
  name: izel-stolon
---
# Source: stolon/templates/keeper-headless-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: izel-stolon-keeper-headless
  labels:
    app: stolon
    chart: stolon-1.6.1
    release: izel
    heritage: Helm
  annotations:
spec:
  clusterIP: None
  ports:
    - name: keeper
      port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    app: stolon
    release: izel
    component: stolon-keeper
---
# Source: stolon/templates/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: izel-stolon-metrics
  labels:
    app: stolon
    chart: stolon-1.6.1
    release: izel
    heritage: Helm
    component: "all"
spec:
  ports:
    - name: metrics
      port: 8080
  selector:
    app: stolon
    release: izel
---
# Source: stolon/templates/proxy-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: izel-stolon-proxy
  labels:
    app: stolon
    chart: stolon-1.6.1
    release: izel
    heritage: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: proxy
      port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    app: stolon
    release: izel
    component: stolon-proxy
---
# Source: stolon/templates/proxy-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: izel-stolon-proxy
  labels:
    app: stolon
    chart: stolon-1.6.1
    release: izel
    heritage: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app: stolon
      release: izel
      component: stolon-proxy
  template:
    metadata:
      labels:
        app: stolon
        release: izel
        component: stolon-proxy
        stolon-cluster: izel-stolon
      annotations:
    spec:
      serviceAccountName: izel-stolon
      containers:
        - name: stolon
          image: "sorintlab/stolon:v0.16.0-pg12"
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/bash"
            - "-ec"
            - |
              exec gosu stolon stolon-proxy
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: STPROXY_CLUSTER_NAME
              value: izel-stolon
            - name: STPROXY_STORE_BACKEND
              value: "kubernetes"
            - name: STPROXY_KUBE_RESOURCE_KIND
              value: "configmap"
            - name: STPROXY_LISTEN_ADDRESS
              value: "0.0.0.0"
            - name: STPROXY_METRICS_LISTEN_ADDRESS
              value: "0.0.0.0:8080"
            - name: STPROXY_DEBUG
              value: "false"
          ports:
            - name: metrics
              containerPort: 8080
            - name: stolon
              containerPort: 5432
          resources:
            {}
          readinessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 10
            timeoutSeconds: 5
---
# Source: stolon/templates/sentinel-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: izel-stolon-sentinel
  labels:
    app: stolon
    chart: stolon-1.6.1
    release: izel
    heritage: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app: stolon
      release: izel
      component: stolon-sentinel
  template:
    metadata:
      labels:
        app: stolon
        release: izel
        component: stolon-sentinel
        stolon-cluster: izel-stolon
      annotations:
        checksum/config: 122d8845bb9d8f6db1d0b0ea2b756e485d3612098a1f567876ba0bd0a939bb7c
    spec:
      serviceAccountName: izel-stolon
      containers:
        - name: stolon
          image: "sorintlab/stolon:v0.16.0-pg12"
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/bash"
            - "-ec"
            - |
              exec gosu stolon stolon-sentinel
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: STSENTINEL_CLUSTER_NAME
              value: izel-stolon
            - name: STSENTINEL_STORE_BACKEND
              value: "kubernetes"
            - name: STSENTINEL_KUBE_RESOURCE_KIND
              value: "configmap"
            - name: STSENTINEL_METRICS_LISTEN_ADDRESS
              value: "0.0.0.0:8080"
            - name: STSENTINEL_DEBUG
              value: "false"
          ports:
            - name: metrics
              containerPort: 8080
            - name: stolon
              containerPort: 5432
          resources:
            {}
---
# Source: stolon/templates/keeper-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: izel-stolon-keeper
  labels:
    app: stolon
    chart: stolon-1.6.1
    release: izel
    heritage: Helm
spec:
  serviceName: izel-stolon-keeper-headless
  replicas: 2
  selector:
    matchLabels:
      app: stolon
      release: izel
      component: stolon-keeper
  template:
    metadata:
      labels:
        app: stolon
        release: izel
        component: stolon-keeper
        stolon-cluster: izel-stolon
      annotations:
    spec:
      serviceAccountName: izel-stolon
      terminationGracePeriodSeconds: 10
      containers:
        - name: stolon
          image: "sorintlab/stolon:v0.16.0-pg12"
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/bash"
            - "-ec"
            - |
              # Generate our keeper uid using the pod index
              IFS='-' read -ra ADDR <<< "$(hostname)"
              export STKEEPER_UID="keeper${ADDR[-1]}"
              export POD_IP=$(hostname -i)
              export STKEEPER_PG_LISTEN_ADDRESS=$POD_IP
              export STOLON_DATA=/stolon-data
              chown stolon:stolon $STOLON_DATA
              exec gosu stolon stolon-keeper --data-dir $STOLON_DATA
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: STKEEPER_CLUSTER_NAME
              value: izel-stolon
            - name: STKEEPER_STORE_BACKEND
              value: "kubernetes"
            - name: STKEEPER_KUBE_RESOURCE_KIND
              value: "configmap"
            - name: STKEEPER_PG_REPL_USERNAME

              value: "repluser"

            - name: STKEEPER_PG_REPL_PASSWORDFILE

              value: "/etc/secrets/stolon/pg_repl_password"

            - name: STKEEPER_PG_SU_USERNAME

              value: "stolon"

            - name: STKEEPER_PG_SU_PASSWORDFILE

              value: "/etc/secrets/stolon/pg_su_password"

            - name: STKEEPER_METRICS_LISTEN_ADDRESS
              value: "0.0.0.0:8080"
            - name: STKEEPER_DEBUG
              value: "false"
          ports:
            - name: metrics
              containerPort: 8080
            - name: stolon
              containerPort: 5432
          resources:
            {}
          volumeMounts:
          - name: data
            mountPath: /stolon-data

          - name: stolon-secrets
            mountPath: /etc/secrets/stolon



          lifecycle:
      volumes:
        - name: config
          configMap:
            name: izel-stolon

        - name: stolon-secrets
          secret:
            secretName: izel-stolon



  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "10Gi"
---
# Source: stolon/templates/metrics-servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: izel-stolon
  labels:
    app: stolon
    chart: stolon-1.6.1
    release: izel
    heritage: Helm
  namespace: prometheus
spec:
  endpoints:
    - targetPort: "metrics"
      interval: 15s
      scrapeTimeout: 10s
  namespaceSelector:
    matchNames:
      - stolon
  selector:
    matchLabels:
      app: stolon
      release: izel
      component: "all"
---
# Source: stolon/templates/hooks/create-cluster-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: izel-stolon-create-cluster
  labels:
    app: stolon
    chart: stolon-1.6.1
    release: izel
    heritage: Helm
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      labels:
        app: izel-stolon
        release: izel
    spec:
      restartPolicy: OnFailure
      serviceAccountName: izel-stolon
      containers:
        - name: izel-stolon-create-cluster
          image: "sorintlab/stolon:v0.16.0-pg12"
          imagePullPolicy: IfNotPresent
          command: ["/usr/local/bin/stolonctl"]
          args:
            - init
            - --cluster-name=izel-stolon
            - --store-backend=kubernetes
            - --kube-resource-kind=configmap
            - --yes
            - '{ "initMode": "new", "pgParameters": {"ssl":"off","ssl_ca_file":null,"ssl_cert_file":null,"ssl_key_file":null}  }'
---
# Source: stolon/templates/hooks/update-cluster-spec-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: izel-stolon-update-cluster-spec
  labels:
    app: stolon
    chart: stolon-1.6.1
    release: izel
    heritage: Helm
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      labels:
        app: izel-stolon
        release: izel
    spec:
      restartPolicy: OnFailure
      serviceAccountName: izel-stolon
      containers:
        - name: izel-stolon-update-cluster-spec
          image: "sorintlab/stolon:v0.16.0-pg12"
          imagePullPolicy: IfNotPresent
          command: ["/usr/local/bin/stolonctl"]
          args:
            - update
            - --cluster-name=izel-stolon
            - --store-backend=kubernetes
            - --kube-resource-kind=configmap
            - -p
            - '{ "pgParameters": {"ssl":"off","ssl_ca_file":null,"ssl_cert_file":null,"ssl_key_file":null}}'
