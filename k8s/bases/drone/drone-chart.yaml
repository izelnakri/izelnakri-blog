---
# Source: drone/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: drone-drone
  labels:
    app: drone
    chart: "drone-2.0.7"
    release: "drone"
    heritage: "Tiller"
type: Opaque
data:
  
  secret: "NXJNSmNkVXA3MnhwV0xYeXNsMHNESUJo"
  
---apiVersion: v1
kind: Secret
metadata:
  name: drone-drone-source-control
  labels:
    app: drone
    chart: "drone-2.0.7"
    release: "drone"
    heritage: "Tiller"
type: Opaque
data:
  
  
  
---
# Source: drone/templates/pvc.yaml

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: drone-drone
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"

---
# Source: drone/templates/service-account-pipeline.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: drone-drone-pipeline
  namespace: default
  labels:
    app: drone
    chart: "drone-2.0.7"
    release: "drone"
    heritage: "Tiller"


---
# Source: drone/templates/service-account.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: drone-drone
  labels:
    app: drone
    chart: "drone-2.0.7"
    release: "drone"
    heritage: "Tiller"


---
# Source: drone/templates/role-pipeline.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: drone-drone-pipeline
  labels:
    app: drone
    chart: "drone-2.0.7"
    release: "drone"
    heritage: "Tiller"
rules:
  - apiGroups:
      - extensions
    resources:
      - deployments
    verbs:
      - get
      - list
      - watch
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - namespaces
      - configmaps
      - secrets
      - pods
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/log
    verbs:
      - get


---
# Source: drone/templates/role-binding-pipeline.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: drone-drone-pipeline
  labels:
    app: drone
    chart: "drone-2.0.7"
    release: "drone"
    heritage: "Tiller"
subjects:
  - kind: ServiceAccount
    name: drone-drone-pipeline
    namespace: default
roleRef:
  kind: ClusterRole
  name: drone-drone-pipeline
  apiGroup: rbac.authorization.k8s.io
---
# Source: drone/templates/role.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: drone-drone
  labels:
    app: drone
    chart: "drone-2.0.7"
    release: "drone"
    heritage: "Tiller"
rules:
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - "*"
  - apiGroups:
      - extensions
    resources:
      - deployments
    verbs:
      - get
      - list
      - patch
      - update


---
# Source: drone/templates/role-binding.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: drone-drone
  labels:
    app: drone
    chart: "drone-2.0.7"
    release: "drone"
    heritage: "Tiller"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: drone-drone
subjects:
- kind: ServiceAccount
  name: drone-drone
  namespace: default


---
# Source: drone/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: drone-drone
  annotations:
  labels:
    app: drone
    chart: "drone-2.0.7"
    release: "drone"
    heritage: "Tiller"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: drone
    release: "drone"
    component: server

---
# Source: drone/templates/deployment-server.yaml

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: drone-drone-server
  labels:
    app: drone
    chart: "drone-2.0.7"
    release: "drone"
    heritage: "Tiller"
    component: server
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/secrets: b626f320647498d25a40023c6e63a8dfe68be3d76126e5cbd251615c43c81392
      labels:
        app: drone
        release: "drone"
        component: server
    spec:
      serviceAccountName: drone-drone
      containers:
      - name: server
        image: "docker.io/drone/drone:1.2"
        imagePullPolicy: IfNotPresent
        env:
          - name: DRONE_KUBERNETES_ENABLED
            value: "true"
          - name: DRONE_KUBERNETES_NAMESPACE
            value: default
          - name: DRONE_KUBERNETES_SERVICE_ACCOUNT
            value: drone-drone-pipeline
          - name: DRONE_GIT_ALWAYS_AUTH
            value: "false"
          - name: DRONE_SERVER_HOST
            value: "drone.izelnakri.com"
          - name: DRONE_RPC_PROTO
            value: "https"
          - name: DRONE_RPC_HOST
            value: drone-drone.default:80
          - name: DRONE_SERVER_PROTO
            value: https
          - name: DRONE_USER_CREATE
            value: username:izelnakri,machine:false,admin:true
          - name: DRONE_RPC_SECRET
            valueFrom:
              secretKeyRef:
                name: drone-drone
                key: secret
          - name: DRONE_DATABASE_DATASOURCE
            value: "/var/lib/drone/drone.sqlite"
          - name: DRONE_DATABASE_DRIVER
            value: "sqlite3"
          - name: DRONE_LOGS_DEBUG
            value: "false"
          - name: DRONE_GITEA_SERVER
            value: https://gitea.izelnakri.com
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        - name: https
          containerPort: 443
          protocol: TCP
        - name: grpc
          containerPort: 9000
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
        resources:
          {}
          
        volumeMounts:
        
        - name: data
          mountPath: /var/lib/drone
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: drone-drone


---
# Source: drone/templates/deployment-agent.yaml

---
# Source: drone/templates/ingress.yaml

---
# Source: drone/templates/namespace-pipeline.yaml

